{
    "plugins": [
      "babel",
      "react"
    ],
    "parser": "babel-eslint",
    "parserOptions": {
      "ecmaVersion": 8,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true,
        "modules": true,
        "experimentalObjectRestSpread": true
      }
    },
    "extends": ["eslint:recommended", "plugin:react/recommended"],
    "env": {
      "browser": true,
      "jest": true,
      "es6": true,
      "node": true
    },
    "globals": {
      "process": false,
      "global": true
    },
    "rules": {
      "array-callback-return": "warn",
      "arrow-spacing": "error",
      "brace-style": ["error", "1tbs"],
      "comma-dangle": ["error", "always-multiline"],  // Matt will fight people to the death for this rule!!!  ;-)
      "comma-spacing": "error",
      "complexity": ["warn", 25],  // TODO gradually move to 20 or less
      "curly": "error",
      "eol-last": ["warn", "always"],
      "eqeqeq": ["error", "smart"],  // TODO smart or always?  It's really "null" that's different.
      "max-lines": ["warn", {"max": 1500, "skipBlankLines": true, "skipComments": true}], // TODO gradually move to 200
      "max-nested-callbacks": ["warn", 6],
      "max-statements": ["warn", 50],
      "no-console": ["error", { "allow": ["warn", "error"]}],
      "no-duplicate-imports": "warn",
      "no-eval": "error",
      "no-lonely-if": "warn",
      "no-new": "error",
      "no-return-assign": "warn",
      "no-return-await": "warn",
      "no-self-compare": "warn",
      "no-sequences": "error",
      "no-tabs": "error",
      "no-trailing-spaces": "error",
      "no-unreachable": "error",
      "no-useless-concat": "warn",
      "no-useless-constructor": "warn",
      "no-useless-rename": "warn",
      "no-var": "error",
      "no-with": "warn",
      "prefer-const": ["warn", {"ignoreReadBeforeAssign": true}],
      "prefer-rest-params": "warn",
      "require-await": "error",
      "rest-spread-spacing": "error",
      "semi": ["error", "always"],
      "space-before-function-paren": ["error", {"anonymous": "never", "named": "never", "asyncArrow": "always"}],
      "yoda": "warn",  // OMG there's a lint rule called Yoda!!!!!
  
      // React things
      "react/no-array-index-key": "warn",
      "react/no-danger": "error",
      "react/no-typos": "warn",
      "react/prop-types": "warn",
  
      // Rules to investigate
      // "camelcase": "warn",  // TODO Soon.  :-)
      // "consistent-return": "error",  // TODO investigate
      // "implicit-arrow-linebreak": ["error", "beside"],  // TODO investigate
      // "max-params": "warn",  // TODO Do we want this at all????
      // "no-confusing-arrow": ["error", {"allowParens": true}],  // TODO investigate
      // "no-invalid-this": "error",  // TODO investigate
      // "no-unneeded-ternary": "warn",  // TODO investigate
      // "prefer-arrow-callback": "warn",  // TODO Soon.  :-)
      // "prefer-template": "warn",  // Maybe if it only argued agains multiple '+' in the same statement...
      // "quote-props": ["error", "consistent"],  // TODO investigate
      // "react/no-deprecated": "warn",  // TODO investigate
  
      // TODO This was stolen from the AirBnB style sheet.  Is it right for us?
      "indent": ["error", 2, {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        // "MemberExpression": null,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        },
        "CallExpression": {
          "arguments": 1
        },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        // list derived from https://github.com/benjamn/ast-types/blob/HEAD/def/jsx.js
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild"
        ],
        "ignoreComments": false
      }]
    },
    "overrides": [
      {
        // Overrides for test files.  There's a few cases where it pays to be lax in test files.
        "files": "*.test.js",
        "rules": {
          "prefer-const": "off",
          "require-await": "off"  // TODO I don't know why we need these.  Let's figure that out.
        }
      }
    ]
  }